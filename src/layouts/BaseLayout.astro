---
// import the Image component and the image
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";

let url = new URL(Astro.request.url);
let isRoot = url.pathname === "/";

const { pageTitle, featuredUrl, image } = Astro.props;
---

<!-- {/* TODO: Place the website logo on top of the navigation. */} -->
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {!isRoot ? `un-sheeple.me üêë | ${pageTitle}` : ""}
    </title>
  </head>
  <body>
    <div class="main-content">
      <div class="second-layer">
        <div class="second-layer">
          <Header pageTitle={pageTitle} featuredUrl={featuredUrl} />

          {
            image ? (
              <div class="featured-image">
                <img src={image} alt={pageTitle} />
              </div>
            ) : null
          }
        </div>

        <slot />
        <Footer />
      </div>
    </div>

    <script>
      addEventListener("DOMContentLoaded", (event) => {
        // Select the body
        const element = document.querySelector("html") as HTMLElement;

        // Timer function to be called every 60 seconds to set the anymationlenth to a new value
        function timer() {
          const randomDuration1 = Math.random() * 20 + 10;
          const randomDuration2 = Math.random() * 100 + 30;

          // Apply the animation styles to the element
          element.style.animation = `gradient ${randomDuration1}s ease-in-out infinite, moonZoom ${randomDuration2}s ease-in-out infinite`;
        }

        // Select the main content
        const mainContent = document.querySelector(
          ".main-content"
        ) as HTMLElement;

        // Select the second layer
        const secondLayer = document.querySelector(
          ".second-layer"
        ) as HTMLElement;

        // Select the navigation
        const navigation = document.querySelector(".nav-links") as HTMLElement;

        // Get a random number between 0.5 and 5
        let randomSeconds = Math.random() * (5 - 1) + 1;

        function mainContentTimer() {
          if (mainContent) {
            // Get a random color code
            const randomMainContentColor1 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomMainContentColor2 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomMainContentColor3 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomMainContentColor4 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomMainContentColor5 = Math.floor(
              Math.random() * 16777215
            ).toString(16);

            // Apply the animation styles to the element
            mainContent.style.animation = `mainContentGradient ${randomSeconds}s ease-in-out infinite`;
            navigation.style.animation = `mainContentGradient ${randomSeconds}s ease-in-out infinite`;
            mainContent.style.backgroundImage = `linear-gradient(45deg, #${randomMainContentColor1}, #${randomMainContentColor2}, #${randomMainContentColor3}, #${randomMainContentColor4}, #${randomMainContentColor5})`;
            navigation.style.backgroundImage = `linear-gradient(45deg, #${randomMainContentColor1}, #${randomMainContentColor2}, #${randomMainContentColor3}, #${randomMainContentColor4}, #${randomMainContentColor5})`;
          }

          if (secondLayer) {
            // Get a random color code
            const randomSecondLayerColor1 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomSecondLayerColor2 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomSecondLayerColor3 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomSecondLayerColor4 = Math.floor(
              Math.random() * 16777215
            ).toString(16);
            const randomSecondLayerColor5 = Math.floor(
              Math.random() * 16777215
            ).toString(16);

            // Get a random number between 0.5 and 15
            randomSeconds = Math.random() * (15 - 5) + 5;

            // Apply the animation styles to the element
            secondLayer.style.animation = `mainContentGradient ${randomSeconds}s ease-in-out infinite`;
            secondLayer.style.backgroundImage = `linear-gradient(45deg, #${randomSecondLayerColor1}, #${randomSecondLayerColor2}, #${randomSecondLayerColor3}, #${randomSecondLayerColor4}, #${randomSecondLayerColor5})`;
          }
        }

        // Call the timer function to apply the animation styles to the element
        timer();
        mainContentTimer();

        // Call the timer function every 300 seconds (300,000 milliseconds)
        setInterval(timer, 300000);

        // Add the event listener to the body to listen for the mousemove event

        document.body.addEventListener("mousemove", () => {
          //   // Remove the animation styles from the element
          // element.style.animation = "";
          //   // Call the timer function to apply the animation styles to the element
          timer();
        });

        // Add the event listener to the body to listen for the click event
        document.body.addEventListener("click", () => {
          // Remove the animation styles from the element
          // element.style.animation = "";
          // Call the timer function to apply the animation styles to the element
          // timer();
          mainContentTimer();
        });

        window.addEventListener("popstate", function (event) {
          mainContentTimer();
        });

        // // Add the event listener to the body to listen for the touchmove event
        // document.body.addEventListener("touchmove", () => {
        //   // Remove the animation styles from the element
        //   element.style.animation = "";
        //   // Call the timer function to apply the animation styles to the element
        //   timer();
        // });
      });
    </script>
  </body>
</html>
